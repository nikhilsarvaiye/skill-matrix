[{"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx":"1","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\reportWebVitals.ts":"2","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx":"3","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\en\\en-translations.ts":"4","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization-demo.tsx":"5","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.service.ts":"6","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.tsx":"7","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\button.tsx":"8","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.service.ts":"9","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.config.ts":"10","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\index.ts":"11"},{"size":936,"mtime":1612901633338,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1612873232414,"results":"14","hashOfConfig":"13"},{"size":517,"mtime":1612899897654,"results":"15","hashOfConfig":"13"},{"size":1044,"mtime":1612899090912,"results":"16","hashOfConfig":"13"},{"size":2741,"mtime":1612900679391,"results":"17","hashOfConfig":"13"},{"size":508,"mtime":1612900784889,"results":"18","hashOfConfig":"13"},{"size":830,"mtime":1612901388176,"results":"19","hashOfConfig":"13"},{"size":492,"mtime":1612901619099,"results":"20","hashOfConfig":"13"},{"size":616,"mtime":1612899407005,"results":"21","hashOfConfig":"13"},{"size":159,"mtime":1612899086721,"results":"22","hashOfConfig":"13"},{"size":64,"mtime":1612900218746,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gjj7ub",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\reportWebVitals.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx",[],["51","52"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\en\\en-translations.ts",["53"],"import { TranslationService } from '../translation.service';\r\n\r\nconst common = {};\r\n\r\nexport const enTranslations = {\r\n    ...common,\r\n    searchPatientTitle: 'Search Patient',\r\n    placeholder: 'Patient name {name}',\r\n    date: 'Hospitalised date {ts, date}',\r\n    time: 'Hospitalised time {ts, time}',\r\n    number: 'Claim amount {num, number}',\r\n    plural: 'Total number of {num, plural, one {# patient} other {# patients}}',\r\n    select: 'Gender {gender, select, male {boy} female {girl}}',\r\n    selectordinal: `I am the {order, selectordinal, \r\n        one {#st person} \r\n        two {#nd person}\r\n        =3 {#rd person} \r\n        other {#th person}\r\n    }`,\r\n    richtext: 'I have <bold>{num, plural, one {# dog} other {# dogs}}</bold>',\r\n    richertext:\r\n        'I have & < &nbsp; <bold>{num, plural, one {# & dog} other {# dogs}}</bold>',\r\n    unicode: 'Hello\\u0020{placeholder}',\r\n    'modules.patient.search.header.title.searchPatient': 'Search Patient',\r\n    // `${t.module()}`\r\n};\r\n\r\nexport { enTranslations as EnTranslations };\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization-demo.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.service.ts",["54"],"import { TranslationService } from './translation/translation.service';\r\n\r\nexport class InternationalizationService {\r\n    /* TODO NS: Need to inject configuration service object\r\n    to load client configuration details */\r\n    constructor() {}\r\n\r\n    getLocale() {\r\n        /* clientConfiguration.locale */\r\n        // locales - en,ru,in\r\n        return 'in'; \r\n    }\r\n\r\n    getMessages() {\r\n        const locale = this.getLocale();\r\n        return new TranslationService().getMessages(locale);\r\n    }\r\n}\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\button.tsx",["55"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.service.ts",["56"],"import { EnTranslations } from './en/en-translations';\r\nimport { TranslationConfig } from './translation.config';\r\n\r\nexport class TranslationService {\r\n    constructor() {}\r\n\r\n    getMessages(locale: string) {\r\n        let messages = {};\r\n        switch (locale) {\r\n            case 'en':\r\n                messages = EnTranslations;\r\n                break;\r\n            default:\r\n                messages = EnTranslations;\r\n        }\r\n\r\n        return messages;\r\n    }\r\n\r\n    addMessages(module: any, messages: any[]) {}\r\n\r\n    module(alias: string): any {\r\n        return TranslationConfig.alias[alias];\r\n    }\r\n}\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.config.ts",["57"],"const translationConfig = {\r\n    alias: <any>{\r\n        library: 'l',\r\n        module: 'm',\r\n    },\r\n};\r\n\r\nexport { translationConfig as TranslationConfig };\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\index.ts",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":28},{"ruleId":"66","severity":1,"message":"67","line":6,"column":5,"nodeType":"68","messageId":"69","endLine":6,"endColumn":21},{"ruleId":"62","severity":1,"message":"70","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":5,"column":5,"nodeType":"68","messageId":"69","endLine":5,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":2,"column":12,"nodeType":"73","messageId":"74","endLine":5,"endColumn":6},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'TranslationService' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ReactNode' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as any' instead of '<any>'.","TSTypeAssertion","as","no-global-assign","no-unsafe-negation"]