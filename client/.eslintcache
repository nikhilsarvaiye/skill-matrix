[{"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx":"1","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.tsx":"2","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.service.ts":"3","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.service.ts":"4","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.config.ts":"5","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\en\\en-translations.ts":"6","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx":"7","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\top-menu.tsx":"8","e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\index.ts":"9","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx":"10","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.service.ts":"11","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.tsx":"12","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\index.ts":"13","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\util\\debounce.ts":"14","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\input\\index.ts":"15","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.config.ts":"16","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\input\\input.tsx":"17","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\button.tsx":"18","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\util\\event-keys.ts":"19","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\index.ts":"20","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx":"21","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\dropdown\\index.ts":"22","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\label\\label.tsx":"23","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\dropdown\\dropdown.tsx":"24","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\date-picker\\date-picker.tsx":"25","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\table-component.tsx":"26","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\table.tsx":"27","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\demo\\table.demo.tsx":"28","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\date-picker\\index.ts":"29","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\demo\\index.ts":"30","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\demo\\index.ts":"31","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\date-picker\\date-picker.validator.ts":"32","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\en\\en-translations.ts":"33","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.service.ts":"34","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\demo\\form.demo.tsx":"35","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\form.tsx":"36","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\action\\form-action.tsx":"37","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\label\\index.ts":"38","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\divider\\index.ts":"39","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\form-section.model.ts":"40","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\body\\form-section-body.tsx":"41","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\request-cache-id\\form-request-cache-id.handler.ts":"42","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field.tsx":"43","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\portal\\index.ts":"44","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\helpers\\form.helpers.validator.ts":"45","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\header\\form-section-header.tsx":"46","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\scrollbar\\scrollbar.tsx":"47","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\query-params\\form-query-param.handler.ts":"48","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\demo\\form.demo.validator.ts":"49"},{"size":517,"mtime":1612899897654,"results":"50","hashOfConfig":"51"},{"size":830,"mtime":1612901388176,"results":"52","hashOfConfig":"51"},{"size":511,"mtime":1613396560742,"results":"53","hashOfConfig":"51"},{"size":592,"mtime":1613396688537,"results":"54","hashOfConfig":"51"},{"size":161,"mtime":1613396560740,"results":"55","hashOfConfig":"51"},{"size":980,"mtime":1613396560741,"results":"56","hashOfConfig":"51"},{"size":977,"mtime":1613414722362,"results":"57","hashOfConfig":"51"},{"size":1544,"mtime":1613414712452,"results":"58","hashOfConfig":"51"},{"size":64,"mtime":1612900218746,"results":"59","hashOfConfig":"51"},{"size":517,"mtime":1612899897654,"results":"60","hashOfConfig":"61"},{"size":511,"mtime":1613396560742,"results":"62","hashOfConfig":"61"},{"size":830,"mtime":1612901388176,"results":"63","hashOfConfig":"61"},{"size":64,"mtime":1612900218746,"results":"64","hashOfConfig":"61"},{"size":963,"mtime":1613492132806,"results":"65","hashOfConfig":"61"},{"size":26,"mtime":1613495299719,"results":"66","hashOfConfig":"61"},{"size":161,"mtime":1613396560740,"results":"67","hashOfConfig":"61"},{"size":5718,"mtime":1613547922266,"results":"68","hashOfConfig":"61"},{"size":2201,"mtime":1613546933184,"results":"69","hashOfConfig":"61"},{"size":878,"mtime":1613492350434,"results":"70","hashOfConfig":"61"},{"size":27,"mtime":1613502935126,"results":"71","hashOfConfig":"61"},{"size":2576,"mtime":1613547987962,"results":"72","hashOfConfig":"61"},{"size":29,"mtime":1613505920970,"results":"73","hashOfConfig":"61"},{"size":1248,"mtime":1613501902615,"results":"74","hashOfConfig":"61"},{"size":30652,"mtime":1613547312661,"results":"75","hashOfConfig":"61"},{"size":8153,"mtime":1613546907128,"results":"76","hashOfConfig":"61"},{"size":4435,"mtime":1613539770169,"results":"77","hashOfConfig":"61"},{"size":1983,"mtime":1613540640323,"results":"78","hashOfConfig":"61"},{"size":1307,"mtime":1613540379804,"results":"79","hashOfConfig":"61"},{"size":74,"mtime":1613509559816,"results":"80","hashOfConfig":"61"},{"size":31,"mtime":1613538530822,"results":"81","hashOfConfig":"61"},{"size":41,"mtime":1613540740487,"results":"82","hashOfConfig":"61"},{"size":2246,"mtime":1613509118587,"results":"83","hashOfConfig":"61"},{"size":980,"mtime":1613396560741,"results":"84","hashOfConfig":"61"},{"size":592,"mtime":1613396688537,"results":"85","hashOfConfig":"61"},{"size":8659,"mtime":1613548808586,"results":"86","hashOfConfig":"61"},{"size":5247,"mtime":1613546907128,"results":"87","hashOfConfig":"61"},{"size":246,"mtime":1613547085748,"results":"88","hashOfConfig":"61"},{"size":26,"mtime":1613499462116,"results":"89","hashOfConfig":"61"},{"size":44,"mtime":1613540740527,"results":"90","hashOfConfig":"61"},{"size":292,"mtime":1613544919500,"results":"91","hashOfConfig":"61"},{"size":455,"mtime":1613544804645,"results":"92","hashOfConfig":"61"},{"size":5236,"mtime":1613547845565,"results":"93","hashOfConfig":"61"},{"size":6053,"mtime":1613549011918,"results":"94","hashOfConfig":"61"},{"size":27,"mtime":1613493483616,"results":"95","hashOfConfig":"61"},{"size":499,"mtime":1613546907155,"results":"96","hashOfConfig":"61"},{"size":924,"mtime":1613544857740,"results":"97","hashOfConfig":"61"},{"size":1227,"mtime":1613546748228,"results":"98","hashOfConfig":"61"},{"size":4754,"mtime":1613547838177,"results":"99","hashOfConfig":"61"},{"size":1636,"mtime":1613548979397,"results":"100","hashOfConfig":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"1h35io6",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1gjj7ub",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx",[],["212","213"],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.tsx",[],["214","215"],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.service.ts",[],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.service.ts",[],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.config.ts",[],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\en\\en-translations.ts",[],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx",[],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\top-menu.tsx",[],["216","217"],"e:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx",[],["218","219"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.service.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\internationalization.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\index.ts",[],["220","221"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\util\\debounce.ts",["222"],"import { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport const useDebounce = (value: any, delay = 400) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            // Set debouncedValue to value (passed in) after the specified delay\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            // Return a cleanup function that will be called every time ...\r\n            // ... useEffect is re-called. useEffect will only be re-called ...\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        // Only re-call effect if value changes\r\n        // You could also add the \"delay\" var to inputs array if you ...\r\n        // ... need to be able to change that dynamically.\r\n        [value],\r\n    );\r\n\r\n    return debouncedValue;\r\n};\r\n",["223","224"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\input\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.config.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\input\\input.tsx",["225","226"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\button.tsx",["227"],"import { ReactNode, MouseEventHandler, CSSProperties } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Button as AntdButton } from 'antd';\r\nimport './button.scss';\r\n\r\nexport enum ButtonType {\r\n    Default = 'default',\r\n    Primary = 'primary',\r\n    Secondary = 'secondary',\r\n    Tertiary = 'tertiary',\r\n    Quaternary = 'quaternary',\r\n    Ghost = 'ghost',\r\n    Dashed = 'dashed',\r\n    Link = 'link',\r\n    Text = 'text',\r\n}\r\n\r\nexport enum SubmitAction {\r\n    Default = 'default',\r\n    Close = 'close',\r\n    New = 'new',\r\n    Add = 'add',\r\n    Back = 'back',\r\n}\r\n\r\nexport enum ButtonHTMLType {\r\n    Button = 'button',\r\n    Submit = 'submit',\r\n    Reset = 'reset',\r\n}\r\n\r\nexport enum ButtonSize {\r\n    Small = 'small',\r\n    Middle = 'middle',\r\n    Large = 'large',\r\n}\r\n\r\ninterface IProps {\r\n    primary?: boolean;\r\n    type?: ButtonType;\r\n    disabled?: boolean;\r\n    startIcon?: any;\r\n    endIcon?: any;\r\n    children?: any;\r\n    onClick?: MouseEventHandler<HTMLElement>;\r\n    htmlType?: ButtonHTMLType;\r\n    danger?: boolean;\r\n    loading?: boolean;\r\n    size?: ButtonSize;\r\n    href?: string;\r\n    style?: CSSProperties;\r\n    className?: string;\r\n    tabIndex?: number;\r\n}\r\n\r\nexport const Button = (props: IProps) => {\r\n    return (\r\n        <span className=\"btn-container\">\r\n            <AntdButton\r\n                tabIndex={props.tabIndex}\r\n                htmlType={props.htmlType || ButtonHTMLType.Button}\r\n                className={classNames('btn', props.type, props.className)}\r\n                size={props.size}\r\n                loading={props.loading}\r\n                danger={props.danger}\r\n                disabled={props.disabled}\r\n                href={props.href}\r\n                onClick={props.onClick}\r\n                style={props.style}\r\n                type={props.type as any}\r\n            >\r\n                {props.startIcon ? (\r\n                    <span className=\"btn-icon start\">{props.startIcon}</span>\r\n                ) : null}\r\n                {props.children}\r\n                {props.endIcon ? (\r\n                    <span className=\"btn-icon end\">{props.endIcon}</span>\r\n                ) : null}\r\n            </AntdButton>\r\n        </span>\r\n    );\r\n};\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\util\\event-keys.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\dropdown\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\label\\label.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\dropdown\\dropdown.tsx",["228","229","230","231","232"],"import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n    KeyboardEventHandler,\r\n    MouseEvent,\r\n    ChangeEventHandler,\r\n    ChangeEvent,\r\n    FocusEventHandler,\r\n    RefObject,\r\n    cloneElement,\r\n    ReactNode,\r\n    createRef,\r\n    createElement,\r\n} from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport classNames from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    CaretDownOutlined,\r\n    LoadingOutlined,\r\n    SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport { Portal } from '@library/portal';\r\nimport { Input, InputProps } from '@library/input';\r\nimport { Label } from '@library/label';\r\nimport { EventKeys } from '@util/event-keys';\r\nimport { useDebounce } from '@util/debounce';\r\nimport { filterBySearchText } from '@library/util/data-filter';\r\nimport './dropdown.scss';\r\n\r\nexport enum DropdownType {\r\n    AutoComplete = 'autocomplete',\r\n    Combobox = 'combobox',\r\n    Dropdown = 'dropdown',\r\n}\r\n\r\ninterface IProps {\r\n    name?: string;\r\n    type?: DropdownType;\r\n    value?: any;\r\n    data?: any[];\r\n    textField?: string;\r\n    valueField?: string;\r\n    dataItemKey?: string;\r\n    onFocus?: FocusEventHandler<HTMLElement>;\r\n    onChange?: ChangeEventHandler<HTMLElement>;\r\n    onBlur?: FocusEventHandler<HTMLElement>;\r\n    onTextChange?: (value: any) => {};\r\n    onKeyDownChange?: KeyboardEventHandler<HTMLElement>;\r\n    onOpen?: () => {};\r\n    onClose?: () => {};\r\n    onDebouncedValueChange?: (value: any) => {};\r\n    loading?: boolean;\r\n    itemRender?: (li: any, itemProps: any) => ReactNode;\r\n    placeholder?: string;\r\n    preEndIcon?: any;\r\n    onPreEndIconClick?: ChangeEventHandler<HTMLElement>;\r\n    endIcon?: any;\r\n    onEndIconClick?: ChangeEventHandler<HTMLElement>;\r\n    allowCustom?: boolean;\r\n    disabled?: boolean;\r\n    filterable?: boolean;\r\n    filterColumns?: string[];\r\n    filterCaseSensitivity?: boolean;\r\n    minFilterLength?: number;\r\n    visibleFilterInput?: boolean;\r\n    className?: string;\r\n    pageSize?: number;\r\n    onShowMoreItems?: () => void;\r\n    visibleDropdownItems?: number;\r\n    tabIndex?: number;\r\n    visibleDropdown?: boolean;\r\n    visibleNoData?: boolean;\r\n    noDataText?: string;\r\n    lock?: boolean;\r\n    autoFocus?: boolean;\r\n}\r\n\r\nexport const Dropdown = ({\r\n    type = DropdownType.Dropdown,\r\n    name,\r\n    value,\r\n    data = [],\r\n    textField,\r\n    valueField,\r\n    dataItemKey,\r\n    onFocus,\r\n    onChange,\r\n    onBlur,\r\n    onTextChange,\r\n    onKeyDownChange,\r\n    onOpen,\r\n    onClose,\r\n    onDebouncedValueChange,\r\n    loading,\r\n    itemRender,\r\n    placeholder,\r\n    preEndIcon,\r\n    onPreEndIconClick,\r\n    endIcon,\r\n    onEndIconClick,\r\n    allowCustom = false,\r\n    disabled,\r\n    filterable = true,\r\n    filterColumns,\r\n    filterCaseSensitivity = false,\r\n    minFilterLength = 0,\r\n    visibleFilterInput,\r\n    className,\r\n    pageSize = 20,\r\n    onShowMoreItems,\r\n    visibleDropdownItems = 5,\r\n    tabIndex,\r\n    visibleDropdown,\r\n    visibleNoData = true,\r\n    noDataText = 'No data found',\r\n    lock = false,\r\n    autoFocus,\r\n    ...props\r\n}: IProps) => {\r\n    data = data || [];\r\n    const scrollBar = useRef() as RefObject<Scrollbars>;\r\n    const input = useRef() as RefObject<HTMLInputElement>;\r\n    const [inputRef, setInputRef] = useState<RefObject<HTMLInputElement>>();\r\n    const isFirstRun = useRef(true);\r\n    const [openTop, setOpenTop] = useState(false);\r\n    const [itemRefs, setItemRefs] = useState<RefObject<HTMLInputElement>[]>([]);\r\n    const [displayValue, setDisplayValue] = useState('');\r\n    const [filterValue, setFilterValue] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectableItem, setSelectableItem] = useState(null);\r\n    const [filteredData, setFilteredData] = useState<any[]>([]);\r\n    const [visibleShowMoreItems, setVisibleShowMoreItems] = useState(false);\r\n    const [skip, setSkip] = useState(0);\r\n    const [visibleDropdownContainer, setVisibleDropdownContainer] = useState(\r\n        false,\r\n    );\r\n    const [containerStyle, setContainerStyle] = useState({});\r\n    const debouncedValue = useDebounce(displayValue);\r\n\r\n    const handleInputChange = (event: any) => {\r\n        setDisplayValue(event.target.value);\r\n        handleChange(event);\r\n    };\r\n\r\n    const handleFilterInputChange = (event: any) => {\r\n        setFilterValue(event.target.value);\r\n        handleChange(event);\r\n    };\r\n\r\n    const handleChange = (event: any) => {\r\n        openDropdown();\r\n        if (filterable) {\r\n            filter(data, event.target.value);\r\n        }\r\n        if (allowCustom) {\r\n            setInputValue(event.target.value);\r\n            const item = validate(event);\r\n            handleValueChange(formatEvent(event, event.target.value, item));\r\n        }\r\n        if (hasNoValue(event.target.value)) {\r\n            clearValue(event);\r\n        }\r\n        if (onTextChange) {\r\n            onTextChange(event);\r\n        }\r\n    };\r\n\r\n    const handleBlur = (event: any) => {\r\n        closeDropdown();\r\n        const item = validate(event);\r\n        if (onBlur) {\r\n            onBlur(formatEvent(event, inputValue, item));\r\n        }\r\n        if (!allowCustom && !item) {\r\n            clearValue(event);\r\n            //clearValue();\r\n            if (onBlur) {\r\n                setTimeout(() => {\r\n                    onBlur(formatEvent(event, null, item));\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleFocus = (event: any) => {\r\n        if (onFocus) {\r\n            onFocus(event);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (event: any) => {\r\n        if (lock && !EventKeys.isTab(event)) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        if (EventKeys.isDelete(event)) {\r\n            clearValue(event);\r\n        } else if (EventKeys.isEnter(event)) {\r\n            if (!isAutoComplete()) {\r\n                event.preventDefault();\r\n            }\r\n            toggleDropdownContainer();\r\n            setSelectableItemSelection(event);\r\n        } else if (EventKeys.isTab(event)) {\r\n            setSelectableItemSelection(event);\r\n        } else if (EventKeys.isUp(event)) {\r\n            openDropdown();\r\n            setPreviousSelectableItem();\r\n        } else if (EventKeys.isDown(event)) {\r\n            openDropdown();\r\n            setNextSelectableItem();\r\n        } else if (EventKeys.isEscape(event)) {\r\n            closeDropdown();\r\n        } else if (EventKeys.isAltS(event) || EventKeys.isAltB(event)) {\r\n            if (onShowMoreItems) {\r\n                onShowMoreItems();\r\n                closeDropdown();\r\n            }\r\n        } else {\r\n            openDropdown();\r\n        }\r\n\r\n        if (onKeyDownChange) {\r\n            onKeyDownChange(event);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const setSelectableItemSelection = (event: any, prevent = false) => {\r\n        if (selectableItem) {\r\n            setSelection(selectableItem, event);\r\n            if (prevent) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = (event: any) => {\r\n        let item = parseValidValue(inputValue);\r\n        const text = parseText(item);\r\n        if (event.target.value !== text) {\r\n            item = null;\r\n        }\r\n        return item;\r\n    };\r\n\r\n    const handleValueChange = (event: any) => {\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    const toggleDropdownContainer = () => {\r\n        if (visibleDropdownContainer) {\r\n            closeDropdown();\r\n        } else {\r\n            openDropdown();\r\n        }\r\n    };\r\n\r\n    const formatEvent = (event: any, value: any, item: any) => {\r\n        return {\r\n            ...event,\r\n            name: name,\r\n            target: {\r\n                ...event.target,\r\n                name: name,\r\n                item: item,\r\n                value: value,\r\n            },\r\n            value: value,\r\n        };\r\n    };\r\n\r\n    const filter = (data: any[], value: any) => {\r\n        let _filteredData = filterBySearchText(\r\n            data,\r\n            value,\r\n            minFilterLength,\r\n            filterCaseSensitivity,\r\n            filterColumns,\r\n        );\r\n        handleVisibleShowMoreItems(_filteredData);\r\n        _filteredData = _filteredData.slice(skip, skip + pageSize);\r\n        setFilteredData(_filteredData);\r\n        setDefaultSelectableItem(value, _filteredData);\r\n    };\r\n\r\n    const setDefaultSelectableItem = (value: any, filteredData: any[]) => {\r\n        setSelectableItem(null);\r\n        if (hasNoValue(value) || filteredData.length === 0) {\r\n            setSelectableItem(null);\r\n            return;\r\n        }\r\n        if (filteredData.length) {\r\n            setSelectableItem(filteredData[0]);\r\n        }\r\n    };\r\n\r\n    const handleVisibleShowMoreItems = (_filteredData: any[]) => {\r\n        setVisibleShowMoreItems(false);\r\n        if (_filteredData.length > pageSize && onShowMoreItems) {\r\n            setVisibleShowMoreItems(true);\r\n        }\r\n    };\r\n\r\n    const hasNoValue = (value: any) => {\r\n        return value === null || value === undefined || value === '';\r\n    };\r\n\r\n    const getDataItemKey = (data: any[], item: any) => {\r\n        return dataItemKey && typeof item === 'object'\r\n            ? item[dataItemKey]\r\n            : data.indexOf(item);\r\n    };\r\n\r\n    const clearValue = (event?: ChangeEvent<HTMLInputElement>) => {\r\n        if (lock) {\r\n            return;\r\n        }\r\n        if (event) {\r\n            if (onTextChange) {\r\n                onTextChange(formatEvent(event, '', null));\r\n            }\r\n            handleValueChange(formatEvent(event, '', null));\r\n            setSelection(null, event);\r\n        }\r\n\r\n        setDisplayValue('');\r\n        setFilterValue('');\r\n        setInputValue('');\r\n        filter(data, '');\r\n        setSelectableItem(null);\r\n        setTimeout(() => {\r\n            setSelectableItem(null);\r\n            if (scrollBar.current) {\r\n                scrollBar.current?.scrollTop(0);\r\n            }\r\n        });\r\n        filter(data, '');\r\n    };\r\n\r\n    const openDropdown = () => {\r\n        if (lock) {\r\n            return;\r\n        }\r\n        if (inputRef) {\r\n            inputRef.current?.focus();\r\n        }\r\n        if (!visibleDropdownContainer) {\r\n            setVisibleDropdownContainer(true);\r\n            scrollToSelectedItem();\r\n            setTimeout(() => {\r\n                setDropdownPosition();\r\n            });\r\n\r\n            if (onOpen) {\r\n                onOpen();\r\n            }\r\n        }\r\n    };\r\n\r\n    const closeDropdown = () => {\r\n        if (filteredData.length === 0) {\r\n            filter(data, '');\r\n        }\r\n\r\n        setSelectableItem(null);\r\n        setVisibleDropdownContainer(false);\r\n        if (onClose) {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const handleItemSelection = (event: any, item: any) => {\r\n        setSelection(item, event);\r\n        closeDropdown();\r\n    };\r\n\r\n    const setSelection = (item: any, event?: any) => {\r\n        const text = parseText(item);\r\n        setDisplayValue(text);\r\n        const value = parseValue(item);\r\n        setInputValue(value);\r\n        if (event) {\r\n            if (onTextChange) {\r\n                onTextChange(formatEvent(event, text, item));\r\n            }\r\n            handleValueChange(formatEvent(event, value, item));\r\n        }\r\n    };\r\n\r\n    const getSelectableItem = (prev = false) => {\r\n        if (!selectableItem) {\r\n            if (filteredData.length) {\r\n                return filteredData[0];\r\n            }\r\n        } else {\r\n            let index = filteredData.indexOf(selectableItem);\r\n            index = prev ? index - 1 : index + 1;\r\n            index =\r\n                index < 0\r\n                    ? 0\r\n                    : index >= filteredData.length\r\n                    ? index - 1\r\n                    : index;\r\n            return filteredData[index];\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const getSelectedItem = () => {\r\n        return filteredData.find((x) => isSelected(x));\r\n    };\r\n\r\n    const setNextSelectableItem = () => {\r\n        const selectableItem = getSelectableItem();\r\n        setSelectableItem(selectableItem);\r\n        scrollItem(selectableItem);\r\n    };\r\n\r\n    const setPreviousSelectableItem = () => {\r\n        const selectableItem = getSelectableItem(true);\r\n        setSelectableItem(selectableItem);\r\n        scrollItem(selectableItem, false);\r\n    };\r\n\r\n    const scrollItem = (selectableItem: any, bottom = true) => {\r\n        if (selectableItem) {\r\n            const selectableItemIndex = filteredData.indexOf(selectableItem);\r\n            const itemRef = itemRefs[selectableItemIndex];\r\n            if (itemRef.current) {\r\n                let scrollItemHeight = itemRef.current.offsetHeight;\r\n                const itemOffset = scrollItemHeight * selectableItemIndex;\r\n                const scrollTop = scrollBar.current\r\n                    ? scrollBar.current.getScrollTop()\r\n                    : 0;\r\n                const contentHeight = scrollBar.current\r\n                    ? scrollBar.current.getClientHeight()\r\n                    : 0;\r\n                const viewport = scrollTop + contentHeight;\r\n                if (\r\n                    itemOffset < scrollTop ||\r\n                    itemOffset + scrollItemHeight > viewport\r\n                ) {\r\n                    if (!bottom) {\r\n                        scrollItemHeight = scrollItemHeight * -1;\r\n                    }\r\n                    scrollBar.current?.scrollTop(scrollTop + scrollItemHeight);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const setDropdownPosition = () => {\r\n        if (scrollBar.current && input.current) {\r\n            const inputRect = input.current.getBoundingClientRect();\r\n            const containerLeft = inputRect.left;\r\n            const containerTop = inputRect.top + inputRect.height;\r\n\r\n            const dropdownContainer = (scrollBar.current as any)?.view\r\n                .parentElement.parentElement;\r\n            const parentContainer = scrollparent(dropdownContainer);\r\n            const dropdownContainerRect = dropdownContainer.getBoundingClientRect();\r\n            const dropdownContainerHeight = dropdownContainerRect.height;\r\n            const parentContainerRect = parentContainer.getBoundingClientRect();\r\n\r\n            const dropdownContainerOffsetTop =\r\n                containerTop - parentContainerRect.top;\r\n            const dropdownContainerOffsetTopWithHeight =\r\n                containerTop + dropdownContainerHeight;\r\n            const isVerticallyInViewPort =\r\n                // top\r\n                dropdownContainerOffsetTop >= 0 &&\r\n                // bottom\r\n                dropdownContainerOffsetTopWithHeight + 30 <=\r\n                    parentContainerRect.height;\r\n            const positionDifference =\r\n                dropdownContainerHeight + inputRect.height;\r\n            if (isVerticallyInViewPort === false) {\r\n                // Top\r\n                setOpenTop(true);\r\n                setContainerStyle({\r\n                    top: containerTop - positionDifference,\r\n                    left: containerLeft,\r\n                    height: dropdownContainerHeight,\r\n                });\r\n            } else {\r\n                // Bottom\r\n                setOpenTop(false);\r\n                setContainerStyle({\r\n                    top: containerTop,\r\n                    left: containerLeft,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const regex = /(auto|scroll)/;\r\n\r\n    const style = (node: any, prop: any) =>\r\n        getComputedStyle(node, null).getPropertyValue(prop);\r\n\r\n    const scroll = (node: any) =>\r\n        regex.test(\r\n            style(node, 'overflow') +\r\n                style(node, 'overflow-y') +\r\n                style(node, 'overflow-x'),\r\n        );\r\n\r\n    const scrollparent = (node: any): any =>\r\n        !node || node === document.body\r\n            ? document.body\r\n            : scroll(node)\r\n            ? node\r\n            : scrollparent(node.parentNode);\r\n\r\n    const scrollToSelectedItem = () => {\r\n        const selectedItem = getSelectedItem();\r\n        if (selectedItem) {\r\n            setTimeout(() => {\r\n                scrollToItem(selectedItem);\r\n            });\r\n        }\r\n    };\r\n\r\n    const scrollToItem = (selectableItem: any) => {\r\n        const selectableItemIndex = filteredData.indexOf(selectableItem);\r\n        filteredData.every((x, i) => {\r\n            setSelectableItem(selectableItem);\r\n            scrollItem(x);\r\n            return i !== selectableItemIndex;\r\n        });\r\n    };\r\n\r\n    const isSelected = (item: any) => {\r\n        const itemValue = parseValue(item);\r\n        const selectableItemValue = selectableItem\r\n            ? parseValue(selectableItem)\r\n            : null;\r\n        return selectableItem\r\n            ? selectableItemValue === itemValue\r\n            : itemValue === inputValue;\r\n    };\r\n\r\n    const parseText = (item: any) => {\r\n        if (!item) {\r\n            return item;\r\n        }\r\n        if (textField) {\r\n            return item[textField];\r\n        }\r\n        return item;\r\n    };\r\n\r\n    const parseValidValue = (value: any) => {\r\n        if (hasNoValue(value)) {\r\n            return value;\r\n        }\r\n        const item = data.find(\r\n            (x) => (valueField ? x[valueField] : x) === value,\r\n        );\r\n        return item;\r\n    };\r\n\r\n    const parseValue = (value: any) => {\r\n        if (!value) {\r\n            return '';\r\n        }\r\n        if (value && valueField) {\r\n            return value[valueField] === undefined ? '' : value[valueField];\r\n        }\r\n        return value;\r\n    };\r\n\r\n    const handleDataChange = () => {\r\n        const _filteredData = pageSize\r\n            ? data.slice(skip, skip + pageSize)\r\n            : data;\r\n        setFilteredData(_filteredData);\r\n\r\n        // add or remove refs\r\n        const refs = [] as RefObject<HTMLInputElement>[];\r\n        (_filteredData || []).forEach((item: any) => {\r\n            refs.push(createRef());\r\n        });\r\n        setItemRefs(refs);\r\n        handleVisibleShowMoreItems(data);\r\n    };\r\n\r\n    const hasControlValue = () =>\r\n        !hasNoValue(inputValue) || !hasNoValue(displayValue);\r\n\r\n    const isAutoComplete = () => {\r\n        return type === DropdownType.AutoComplete;\r\n    };\r\n\r\n    const setPlaceholder = () => {\r\n        switch (type) {\r\n            case DropdownType.Dropdown:\r\n                placeholder = placeholder || 'Select';\r\n                break;\r\n            case DropdownType.Combobox:\r\n                placeholder = placeholder || 'Enter text and select';\r\n                break;\r\n            case DropdownType.AutoComplete:\r\n                placeholder = placeholder || 'Enter text';\r\n                break;\r\n        }\r\n    };\r\n\r\n    const setIcons = () => {\r\n        const defaultPreEndIcon = (\r\n            <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\r\n        );\r\n        const defaultOnPreEndIconClick = clearValue;\r\n\r\n        preEndIcon =\r\n            preEndIcon ||\r\n            (hasControlValue() && !disabled && !lock && defaultPreEndIcon);\r\n        onPreEndIconClick =\r\n            onPreEndIconClick || (defaultOnPreEndIconClick as any);\r\n\r\n        let defaultEndIcon = (\r\n            <FontAwesomeIcon icon={faCaretDown}></FontAwesomeIcon>\r\n        );\r\n        let defaultOnEndIconClick = null;\r\n        switch (type) {\r\n            case DropdownType.Dropdown:\r\n                defaultEndIcon = <CaretDownOutlined />;\r\n                defaultOnEndIconClick = toggleDropdownContainer;\r\n                break;\r\n            case DropdownType.Combobox:\r\n                defaultEndIcon = <SearchOutlined />;\r\n                defaultOnEndIconClick = onEndIconClick;\r\n                break;\r\n            case DropdownType.AutoComplete:\r\n                defaultEndIcon = endIcon;\r\n                defaultOnEndIconClick = onEndIconClick;\r\n                break;\r\n        }\r\n\r\n        const loadingEndIcon = <LoadingOutlined />;\r\n        const loadingOnEndIconClick = null;\r\n\r\n        endIcon = loading\r\n            ? loadingEndIcon\r\n            : !disabled && !lock && (endIcon || defaultEndIcon);\r\n        onEndIconClick = loading\r\n            ? loadingOnEndIconClick\r\n            : !disabled &&\r\n              !lock &&\r\n              ((onEndIconClick || defaultOnEndIconClick) as any);\r\n    };\r\n\r\n    const defineItemRender = () => {\r\n        if (!itemRender) {\r\n            itemRender = (li: any, itemProps: any) => {\r\n                const itemChildren = textField ? (\r\n                    <span>{itemProps.dataItem[textField]}</span>\r\n                ) : (\r\n                    <span>{itemProps.dataItem}</span>\r\n                );\r\n                return cloneElement(li, li.props, itemChildren);\r\n            };\r\n        }\r\n    };\r\n\r\n    const getInputProps = (): InputProps => {\r\n        return {\r\n            name: name,\r\n            value: displayValue,\r\n            onFocus: handleFocus,\r\n            onChange: handleInputChange,\r\n            onBlur: handleBlur,\r\n            onKeyDown: handleKeyDown,\r\n            placeholder: placeholder,\r\n            preEndIcon: preEndIcon,\r\n            onPreEndIconClick: onPreEndIconClick,\r\n            endIcon: endIcon,\r\n            onEndIconClick: onEndIconClick,\r\n            disabled: disabled,\r\n            tabIndex: tabIndex,\r\n            lock: lock,\r\n            autoFocus: autoFocus,\r\n            ...props,\r\n        } as any;\r\n    };\r\n\r\n    const handleValueDataChange = (clearValueIfNotAutoComplete?: boolean) => {\r\n        const item = parseValidValue(value);\r\n        if (item) {\r\n            setSelection(item);\r\n            if (!visibleFilterInput) {\r\n                closeDropdown();\r\n            }\r\n        } else if (\r\n            !allowCustom &&\r\n            (clearValueIfNotAutoComplete ? true : !isAutoComplete())\r\n        ) {\r\n            clearValue();\r\n        }\r\n        if (allowCustom) {\r\n            setDisplayValue(value);\r\n            setInputValue(value);\r\n        }\r\n    };\r\n\r\n    const handleInputRef = (ref: any) => {\r\n        setInputRef(ref);\r\n    };\r\n\r\n    const init = () => {\r\n        defineItemRender();\r\n        setPlaceholder();\r\n        setIcons();\r\n    };\r\n\r\n    init();\r\n\r\n    useEffect(() => {\r\n        if (isFirstRun.current) {\r\n            isFirstRun.current = false;\r\n            return;\r\n        }\r\n        if (onDebouncedValueChange) {\r\n            onDebouncedValueChange(debouncedValue);\r\n        }\r\n    }, [debouncedValue]);\r\n\r\n    useEffect(() => {\r\n        if (data && data.length > 0) {\r\n            handleDataChange();\r\n            handleValueDataChange();\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        handleValueDataChange(true);\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (visibleDropdown) {\r\n            openDropdown();\r\n        } else {\r\n            closeDropdown();\r\n        }\r\n    }, [visibleDropdown]);\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'drop-down',\r\n                { 'no-value': hasNoValue(displayValue) },\r\n                { 'show-more-items': visibleShowMoreItems },\r\n                { 'hide-no-data': !visibleNoData && !filteredData.length },\r\n                className,\r\n            )}\r\n        >\r\n            <div className=\"control\">\r\n                <div className=\"drop-down-input\" ref={input}>\r\n                    <Input\r\n                        {...getInputProps()}\r\n                        onRef={handleInputRef}\r\n                        lock={lock}\r\n                    />\r\n                    <input type=\"hidden\" value={inputValue} />\r\n                </div>\r\n                <Portal>\r\n                    {visibleDropdownContainer && input.current && (\r\n                        <div\r\n                            className={classNames(\r\n                                'drop-down-container',\r\n                                { 'open-top': openTop },\r\n                                className,\r\n                            )}\r\n                            style={{\r\n                                width: input.current.offsetWidth,\r\n                                top:\r\n                                    input.current.getBoundingClientRect().top +\r\n                                    input.current.getBoundingClientRect()\r\n                                        .height,\r\n                                left: input.current.getBoundingClientRect()\r\n                                    .left,\r\n                                ...containerStyle,\r\n                            }}\r\n                        >\r\n                            {visibleFilterInput && (\r\n                                <div className=\"header\">\r\n                                    <ul>\r\n                                        <li>\r\n                                            <Input\r\n                                                {...getInputProps()}\r\n                                                value={filterValue}\r\n                                                onChange={\r\n                                                    handleFilterInputChange\r\n                                                }\r\n                                                lock={lock}\r\n                                                // value={null}\r\n                                                preEndIcon={null}\r\n                                                onPreEndIconClick={undefined}\r\n                                                endIcon={null}\r\n                                                onEndIconClick={undefined}\r\n                                                tabIndex={1}\r\n                                                autoFocus={true}\r\n                                            />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n\r\n                            <Scrollbars\r\n                                ref={scrollBar}\r\n                                className=\"custom-scrollbar-container\"\r\n                                autoHeight={true}\r\n                                autoHeightMax={\r\n                                    itemRefs.length && itemRefs[0].current\r\n                                        ? (visibleDropdownItems + 1) *\r\n                                          itemRefs[0].current.offsetHeight\r\n                                        : 180\r\n                                }\r\n                                style={{\r\n                                    minWidth: input.current.offsetWidth,\r\n                                    width: input.current.offsetWidth,\r\n                                }}\r\n                                hideTracksWhenNotNeeded={true}\r\n                            >\r\n                                <ul>\r\n                                    {filteredData.length ? (\r\n                                        filteredData.map((item, index) => {\r\n                                            const props = {\r\n                                                ref: itemRefs[index],\r\n                                                key: getDataItemKey(\r\n                                                    filteredData,\r\n                                                    item,\r\n                                                ),\r\n                                                onMouseDown: (\r\n                                                    event: MouseEvent,\r\n                                                ) => event.preventDefault(),\r\n                                                onClick: (event: MouseEvent) =>\r\n                                                    handleItemSelection(\r\n                                                        event,\r\n                                                        item,\r\n                                                    ),\r\n                                                className: classNames({\r\n                                                    selected: isSelected(item),\r\n                                                }),\r\n                                                dataItem: item,\r\n                                            } as any;\r\n                                            return (itemRender as any)(\r\n                                                createElement('li', props),\r\n                                                props,\r\n                                            );\r\n                                        })\r\n                                    ) : visibleNoData ? (\r\n                                        <li className=\"no-data\">\r\n                                            {noDataText}\r\n                                        </li>\r\n                                    ) : null}\r\n                                </ul>\r\n                            </Scrollbars>\r\n\r\n                            {visibleShowMoreItems && (\r\n                                <div\r\n                                    className=\"footer\"\r\n                                    style={{ width: input.current.offsetWidth }}\r\n                                >\r\n                                    <ul>\r\n                                        <li\r\n                                            onMouseDown={(e) =>\r\n                                                e.preventDefault()\r\n                                            }\r\n                                            onClick={() => {\r\n                                                if (onShowMoreItems) {\r\n                                                    onShowMoreItems();\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <Label\r\n                                                link={true}\r\n                                                title=\"Select to see more results\"\r\n                                            />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {visibleDropdownContainer && input.current && (\r\n                        <div\r\n                            className=\"drop-down-backdrop\"\r\n                            onClick={closeDropdown}\r\n                        ></div>\r\n                    )}\r\n                </Portal>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\date-picker\\date-picker.tsx",["233","234"],"import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n    ChangeEventHandler,\r\n    FocusEventHandler,\r\n    ChangeEvent,\r\n    FocusEvent,\r\n    RefObject,\r\n} from 'react';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\nimport { DatePicker as AntdDatePicker } from 'antd';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Input } from '@library/input';\r\nimport { EventKeys } from '@util/event-keys';\r\nimport {\r\n    YYYYMMDDHHmmssFormat,\r\n    dddMMMDDYYYYHHmmssGMTZZ,\r\n    format,\r\n    formatYearToCentury,\r\n} from './date-picker.validator';\r\nimport './date-picker.scss';\r\n\r\nexport interface IDatePickerProps {\r\n    name?: string;\r\n    value?: string;\r\n    onChange?: ChangeEventHandler<HTMLInputElement>;\r\n    onFocus?: FocusEventHandler<HTMLInputElement>;\r\n    onBlur?: FocusEventHandler<HTMLInputElement>;\r\n    className?: string;\r\n    disabled?: boolean;\r\n    autoFocus?: boolean;\r\n    dateOnly?: boolean;\r\n}\r\n\r\nexport const DatePicker = ({\r\n    name,\r\n    value,\r\n    onChange,\r\n    onFocus,\r\n    onBlur,\r\n    className,\r\n    disabled,\r\n    autoFocus,\r\n    dateOnly = true,\r\n}: IDatePickerProps) => {\r\n    const [visiblePlaceholder, setVisiblePlaceholder] = useState(true);\r\n    const [visibleDatePicker, setVisibleDatePicker] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const controlContainer = useRef() as RefObject<HTMLInputElement>;\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(event.target.value);\r\n        // todo: earlier commented\r\n        // handleValueChange(formatEvent(event, event.target.value));\r\n    };\r\n\r\n    const handleBlur = (event: FocusEvent<HTMLInputElement>) => {\r\n        validate(event);\r\n        const value = event.target.value;\r\n        const parsedDate = parseDate(value);\r\n        let newValue = parsedDate ? parsedDate : !value ? null : (value as any);\r\n        if (dateOnly && newValue && newValue.format) {\r\n            newValue = newValue.format(YYYYMMDDHHmmssFormat);\r\n        }\r\n        setVisiblePlaceholder(true);\r\n        setVisibleDatePicker(false);\r\n        // todo: added new\r\n        setInputValue(formatDate(newValue) as any);\r\n        if (onBlur) {\r\n            onBlur(formatEvent(event, newValue));\r\n        }\r\n    };\r\n\r\n    const handleFocus = (event: any) => {\r\n        setVisiblePlaceholder(true);\r\n        //setVisibleDatePicker(true);\r\n        if (onFocus) {\r\n            onFocus(event);\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (event: any) => {\r\n        if (EventKeys.isDelete(event)) {\r\n            clearValue(event);\r\n        }\r\n        if (EventKeys.isTab(event)) {\r\n            validate(event);\r\n        } else if (EventKeys.isEnter(event)) {\r\n            validate(event);\r\n        }\r\n    };\r\n\r\n    const clearValue = (event?: any) => {\r\n        setVisiblePlaceholder(true);\r\n        setInputValue('');\r\n        if (event) {\r\n            handleValueChange(formatEvent(event, null));\r\n        }\r\n    };\r\n\r\n    const validate = (event: any) => {\r\n        let value = formatYearToCentury(event.target.value);\r\n        const parsedDate = parseDate(value);\r\n        const newValue = parsedDate ? parsedDate : !value ? null : value;\r\n        handleValueChange(formatEvent(event, newValue));\r\n    };\r\n\r\n    const handleValueChange = (event?: any) => {\r\n        if (onChange) {\r\n            onChange(event);\r\n        }\r\n    };\r\n\r\n    const formatEvent = (event: any, value: any) => {\r\n        return {\r\n            ...event,\r\n            name: name,\r\n            target: {\r\n                ...event.target,\r\n                name: name,\r\n                item: event.target.value,\r\n                value: value,\r\n            },\r\n            value: value,\r\n        };\r\n    };\r\n\r\n    const handleEndIconClick = () => {\r\n        if (visibleDatePicker) {\r\n            setVisibleDatePicker(false);\r\n        } else {\r\n            setVisibleDatePicker(true);\r\n        }\r\n    };\r\n\r\n    const handleDatePickerChange = (date: any, dateString: any) => {\r\n        const _date =\r\n            date && dateOnly\r\n                ? moment(dateString, format, true).format(YYYYMMDDHHmmssFormat)\r\n                : date;\r\n        // todo: added new\r\n        setInputValue(formatDate(_date) as any);\r\n        if (onChange) {\r\n            onChange({\r\n                target: {\r\n                    value: _date,\r\n                    name: name,\r\n                },\r\n            } as any);\r\n        }\r\n    };\r\n\r\n    const handleDatePickerOpenChange = (open: boolean) => {\r\n        setVisibleDatePicker(open);\r\n    };\r\n\r\n    const parseDate = (value: string) => {\r\n        if (value) {\r\n            const date = moment(value, format, true);\r\n            if (date.isValid()) {\r\n                return date;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const formatDate = (value: string) => {\r\n        const momentDate = parseMoment(value);\r\n        return momentDate ? momentDate.format(format[0]) : null;\r\n    };\r\n\r\n    const parseMoment = (value: any) => {\r\n        return typeof value == 'string' &&\r\n            moment(value, YYYYMMDDHHmmssFormat, true).isValid()\r\n            ? moment(value, format)\r\n            : value && (moment.isMoment(value) || moment.isDate(value))\r\n            ? moment(value, format)\r\n            : null;\r\n    };\r\n\r\n    const isDate = (value: any) => {\r\n        return value && (moment.isMoment(value) || moment.isDate(value));\r\n    };\r\n\r\n    const datePickerValue = () => {\r\n        return parseMoment(value);\r\n    };\r\n\r\n    const isValiddddMMMDDYYYYHHmmssGMTZZDate = () => {\r\n        return moment(value, dddMMMDDYYYYHHmmssGMTZZ, true).isValid();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            let updatedValue = value;\r\n            if (isValiddddMMMDDYYYYHHmmssGMTZZDate()) {\r\n                updatedValue = moment(value, format, true).format(\r\n                    YYYYMMDDHHmmssFormat,\r\n                );\r\n                if (onChange) {\r\n                    onChange({\r\n                        target: {\r\n                            value: updatedValue,\r\n                            name: name,\r\n                        },\r\n                    } as any);\r\n                }\r\n            }\r\n            const formattedDate = formatDate(updatedValue);\r\n            if (formattedDate) {\r\n                setInputValue(formattedDate);\r\n            } else {\r\n                setInputValue(updatedValue);\r\n            }\r\n        } else {\r\n            if (value === null) {\r\n                clearValue();\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    return (\r\n        <span\r\n            ref={controlContainer}\r\n            className={classNames(\r\n                'date-picker',\r\n                { invalid: !moment(value, format).isValid() },\r\n                className,\r\n            )}\r\n        >\r\n            {/* Uncomment to test */}\r\n            {/* {JSON.stringify(value)} */}\r\n            <Input\r\n                name={`date-picker-${name}`}\r\n                className=\"date-picker-input\"\r\n                value={inputValue}\r\n                onFocus={handleFocus}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                onKeyDown={handleKeyDown}\r\n                placeholder={visiblePlaceholder ? format[0] : ''}\r\n                endIcon={\r\n                    <FontAwesomeIcon icon={faCalendarAlt}></FontAwesomeIcon>\r\n                }\r\n                onEndIconClick={handleEndIconClick}\r\n                disabled={disabled}\r\n                autoFocus={autoFocus}\r\n            />\r\n            <AntdDatePicker\r\n                format={format}\r\n                open={visibleDatePicker}\r\n                name={name}\r\n                value={datePickerValue()}\r\n                onChange={handleDatePickerChange}\r\n                onOpenChange={handleDatePickerOpenChange}\r\n                inputReadOnly={disabled}\r\n                disabled={disabled}\r\n                showToday={false}\r\n                //getPopupContainer={trigger => trigger.parentElement}\r\n            />\r\n        </span>\r\n    );\r\n};\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\table-component.tsx",["235","236"],"import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Table } from 'antd';\r\nimport {\r\n    PanelRender,\r\n    GetComponentProps,\r\n    GetRowKey,\r\n    TableComponents,\r\n    TableSticky,\r\n} from 'rc-table/lib/interface';\r\nimport {\r\n    ColumnType,\r\n    ExpandableConfig,\r\n    Key,\r\n    SorterResult,\r\n    SortOrder,\r\n    TableCurrentDataSource,\r\n    TablePaginationConfig,\r\n    TableRowSelection,\r\n} from 'antd/lib/table/interface';\r\nimport { SizeType } from 'antd/lib/config-provider/SizeContext';\r\n\r\nexport enum TableLayout {\r\n    Auto = 'auto',\r\n    Fixed = 'fixed',\r\n}\r\n\r\nexport interface ITableComponentProps {\r\n    title?: PanelRender<any>;\r\n    tableLayout?: TableLayout;\r\n    columns?: any[];\r\n    dataSource?: any[];\r\n    loading?: boolean;\r\n    pagination?: false | TablePaginationConfig;\r\n    scroll?: {\r\n        x?: number | true | string;\r\n        y?: number | string;\r\n    };\r\n    bordered?: boolean;\r\n    expandable?: ExpandableConfig<any>;\r\n    rowSelection?: TableRowSelection<any>;\r\n    rowClassName?: string;\r\n    onChange?: (\r\n        pagination: TablePaginationConfig,\r\n        filters: Record<string, (Key | boolean)[] | null>,\r\n        sorter: SorterResult<any> | SorterResult<any>[],\r\n        extra: TableCurrentDataSource<any>,\r\n    ) => void;\r\n    showHeader?: boolean;\r\n    size?: SizeType;\r\n    summary?: (data: any[]) => React.ReactNode;\r\n    footer?: PanelRender<any>;\r\n    onHeaderRow?: GetComponentProps<ColumnType<any>[]>;\r\n    onHeaderCell?: any;\r\n    onRow?: GetComponentProps<any>;\r\n    sortDirections?: SortOrder[];\r\n    showSorterTooltip?: boolean;\r\n    className?: string;\r\n    height?: number;\r\n    rowKey?: string | GetRowKey<any>;\r\n    width?: number;\r\n    components?: TableComponents<any>;\r\n    maxHeight?: string;\r\n    sticky?: boolean | TableSticky;\r\n}\r\n\r\nconst tableComponent = ({\r\n    title,\r\n    tableLayout = TableLayout.Auto,\r\n    columns,\r\n    dataSource = [],\r\n    loading,\r\n    pagination,\r\n    scroll,\r\n    bordered,\r\n    expandable,\r\n    rowSelection,\r\n    rowClassName,\r\n    onChange,\r\n    showHeader,\r\n    size,\r\n    summary,\r\n    footer,\r\n    onHeaderRow,\r\n    onHeaderCell,\r\n    onRow,\r\n    sortDirections,\r\n    showSorterTooltip,\r\n    className,\r\n    height,\r\n    rowKey,\r\n    width,\r\n    components,\r\n    maxHeight, // maxHeight = 'calc(100vh - 150px)',\r\n}: ITableComponentProps) => {\r\n    pagination = {\r\n        position: ['none', 'bottomCenter'] as any,\r\n        current:\r\n            pagination == undefined\r\n                ? 1\r\n                : (pagination as TablePaginationConfig).current,\r\n        showSizeChanger: false,\r\n        hideOnSinglePage: true,\r\n        ...pagination,\r\n    };\r\n    scroll = scroll || {};\r\n    scroll.y = scroll.y || maxHeight;\r\n    rowSelection = rowSelection\r\n        ? {\r\n              ...rowSelection,\r\n              columnTitle:\r\n                  rowSelection.type == 'radio'\r\n                      ? rowSelection.columnTitle || 'Select'\r\n                      : rowSelection.columnTitle,\r\n              columnWidth: rowSelection.columnWidth || '5em',\r\n          }\r\n        : rowSelection;\r\n    className = classNames(\r\n        !dataSource || !dataSource.length ? `empty` : '',\r\n        bordered ? `bordered` : '',\r\n    );\r\n    return (\r\n        <div className=\"table\">\r\n            <Table\r\n                title={title}\r\n                tableLayout={tableLayout}\r\n                pagination={pagination}\r\n                components={components}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n                loading={loading}\r\n                scroll={scroll}\r\n                expandable={expandable}\r\n                showHeader={showHeader}\r\n                size={size}\r\n                summary={summary}\r\n                rowSelection={rowSelection}\r\n                rowClassName={rowClassName}\r\n                onChange={onChange}\r\n                onHeaderRow={onHeaderRow}\r\n                // onHeaderCell={onHeaderCell}\r\n                onRow={onRow}\r\n                sortDirections={sortDirections}\r\n                showSorterTooltip={showSorterTooltip}\r\n                className={className}\r\n                style={{ height: height, width: width }}\r\n                rowKey={rowKey}\r\n                locale={{ emptyText: 'No matching results found' }}\r\n                footer={footer}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { tableComponent as TableComponent };\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\table.tsx",["237","238"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\demo\\table.demo.tsx",["239","240"],"import { Table } from '@library/table';\r\n\r\nconst columns = [\r\n    { title: 'Date', dataIndex: 'date', key: 'date' },\r\n    { title: 'Name', dataIndex: 'name', key: 'name' },\r\n    { title: 'First Name', dataIndex: 'fname', key: 'fname' },\r\n    { title: 'Last Name', dataIndex: 'lname', key: 'lname' },\r\n    { title: 'Middle Name', dataIndex: 'mname', key: 'mname' },\r\n    {\r\n        title: 'Status',\r\n        key: 'state',\r\n        render: () => <span>Finished</span>,\r\n    },\r\n    {\r\n        title: 'Upgrade Status',\r\n        dataIndex: 'upgradeNum',\r\n        key: 'upgradeNum',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        render: () => (\r\n            <span className=\"table-operation\">\r\n                <a>Pause</a>\r\n                <a>Stop</a>\r\n            </span>\r\n        ),\r\n    },\r\n];\r\n\r\nconst data: any[] = [];\r\nfor (let i = 0; i < 20; ++i) {\r\n    data.push({\r\n        key: i,\r\n        date: '2014-12-24 23:12:00',\r\n        name: 'This is production name',\r\n        fname: 'This is production name',\r\n        lname: 'This is production name',\r\n        mname: 'This is production name',\r\n        upgradeNum: 'Upgraded: 56',\r\n    });\r\n}\r\n\r\nexport const TableDemo = () => {\r\n    return <Table columns={columns} dataSource={data} />;\r\n};\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\date-picker\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\demo\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\demo\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\date-picker\\date-picker.validator.ts",["241","242","243","244"],"import moment from 'moment';\r\n\r\nexport const YYYYMMDDHHmmssFormat = 'YYYY-MM-DDTHH:mm:ss';\r\nexport const dddMMMDDYYYYHHmmssGMTZZ = 'ddd MMM DD YYYY HH:mm:ss [GMT]ZZ';\r\n\r\nexport const format = [\r\n    'MM/DD/YYYY',\r\n    'MM/DD/YY',\r\n    'M/D/YYYY',\r\n    'M/D/YY',\r\n    'MMDDYY',\r\n    'MMDDYYYY',\r\n    'MDYY',\r\n    'MDYYYY',\r\n    dddMMMDDYYYYHHmmssGMTZZ,\r\n    YYYYMMDDHHmmssFormat,\r\n];\r\n\r\n/*\r\nexport const addDateValidator = (Yup) => {\r\n    Yup.addMethod(Yup.string, 'isDate', function (fieldName) {\r\n        return this.test({\r\n            name: 'name',\r\n            message: `Please Enter a valid ${fieldName}`,\r\n            test: (value) => {\r\n                return value ? isDate(value) : true;\r\n            },\r\n        });\r\n    });\r\n    Yup.addMethod(Yup.date, 'isDate', function (fieldName) {\r\n        return this.test({\r\n            name: 'name',\r\n            message: `Please Enter a valid ${fieldName}`,\r\n            test: (value) => {\r\n                return value ? isDate(value) : true;\r\n            },\r\n        });\r\n    });\r\n};\r\n*/\r\n\r\nexport const isDate = (value: any, strict = true) => {\r\n    //TODO: Need to check Valid format of new Date()\r\n    if (moment(value, format, true).isValid()) {\r\n        return true;\r\n    } else if (value && value.length > 30) {\r\n        return moment(value).isValid();\r\n    } else {\r\n        return false;\r\n    }\r\n    // return !strict\r\n    //     ? moment(value).isValid()\r\n    //     : moment(value, format, true).isValid();\r\n};\r\n\r\nexport const formatYearToCentury = (value: any) => {\r\n    if (value && (value.length == 6 || value.length == 8)) {\r\n        let year;\r\n        if (value.length == 8 && !value.includes('/')) {\r\n            year = value.toString().substring(value.length - 4, value.length);\r\n        } else {\r\n            year = value.toString().substring(value.length - 2, value.length);\r\n        }\r\n\r\n        if (!isNaN(year) && year.length != 4) {\r\n            let currentCentury = Math.floor(new Date().getFullYear() / 100);\r\n            if (year >= 50) {\r\n                currentCentury--;\r\n            }\r\n            return `${value\r\n                .toString()\r\n                .substring(0, value.length - 2)}${currentCentury}${year}`;\r\n        }\r\n    }\r\n    return value;\r\n};\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\en\\en-translations.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\internationalization\\translation\\translation.service.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\demo\\form.demo.tsx",["245","246"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\form.tsx",["247","248","249"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\action\\form-action.tsx",["250"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\label\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\divider\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\form-section.model.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\body\\form-section-body.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\request-cache-id\\form-request-cache-id.handler.ts",["251","252","253"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field.tsx",["254","255","256","257","258"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\portal\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\helpers\\form.helpers.validator.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\header\\form-section-header.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\scrollbar\\scrollbar.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\query-params\\form-query-param.handler.ts",["259","260","261"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\demo\\form.demo.validator.ts",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"262","replacedBy":"266"},{"ruleId":"264","replacedBy":"267"},{"ruleId":"262","replacedBy":"268"},{"ruleId":"264","replacedBy":"269"},{"ruleId":"262","replacedBy":"270"},{"ruleId":"264","replacedBy":"271"},{"ruleId":"262","replacedBy":"272"},{"ruleId":"264","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":24,"column":9,"nodeType":"276","endLine":24,"endColumn":16,"suggestions":"277"},{"ruleId":"262","replacedBy":"278"},{"ruleId":"264","replacedBy":"279"},{"ruleId":"274","severity":1,"message":"280","line":145,"column":8,"nodeType":"276","endLine":145,"endColumn":24,"suggestions":"281"},{"ruleId":"274","severity":1,"message":"282","line":154,"column":8,"nodeType":"276","endLine":154,"endColumn":19,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":10,"nodeType":"286","messageId":"287","endLine":1,"endColumn":19},{"ruleId":"284","severity":1,"message":"288","line":136,"column":18,"nodeType":"286","messageId":"287","endLine":136,"endColumn":25},{"ruleId":"274","severity":1,"message":"280","line":732,"column":8,"nodeType":"276","endLine":732,"endColumn":24,"suggestions":"289"},{"ruleId":"274","severity":1,"message":"290","line":739,"column":8,"nodeType":"276","endLine":739,"endColumn":14,"suggestions":"291"},{"ruleId":"274","severity":1,"message":"292","line":743,"column":8,"nodeType":"276","endLine":743,"endColumn":15,"suggestions":"293"},{"ruleId":"274","severity":1,"message":"294","line":751,"column":8,"nodeType":"276","endLine":751,"endColumn":25,"suggestions":"295"},{"ruleId":"284","severity":1,"message":"296","line":184,"column":11,"nodeType":"286","messageId":"287","endLine":184,"endColumn":17},{"ruleId":"274","severity":1,"message":"297","line":223,"column":8,"nodeType":"276","endLine":223,"endColumn":15,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":99,"column":24,"nodeType":"301","messageId":"302","endLine":99,"endColumn":26},{"ruleId":"299","severity":1,"message":"300","line":112,"column":37,"nodeType":"301","messageId":"302","endLine":112,"endColumn":39},{"ruleId":"284","severity":1,"message":"303","line":51,"column":11,"nodeType":"286","messageId":"287","endLine":51,"endColumn":20},{"ruleId":"274","severity":1,"message":"304","line":55,"column":8,"nodeType":"276","endLine":55,"endColumn":10,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":25,"column":17,"nodeType":"308","endLine":25,"endColumn":20},{"ruleId":"306","severity":1,"message":"307","line":26,"column":17,"nodeType":"308","endLine":26,"endColumn":20},{"ruleId":"299","severity":1,"message":"300","line":57,"column":32,"nodeType":"301","messageId":"302","endLine":57,"endColumn":34},{"ruleId":"299","severity":1,"message":"300","line":57,"column":53,"nodeType":"301","messageId":"302","endLine":57,"endColumn":55},{"ruleId":"299","severity":1,"message":"300","line":59,"column":26,"nodeType":"301","messageId":"302","endLine":59,"endColumn":28},{"ruleId":"299","severity":1,"message":"309","line":65,"column":41,"nodeType":"301","messageId":"302","endLine":65,"endColumn":43},{"ruleId":"284","severity":1,"message":"310","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":17},{"ruleId":"284","severity":1,"message":"311","line":22,"column":18,"nodeType":"286","messageId":"287","endLine":22,"endColumn":32},{"ruleId":"312","severity":1,"message":"313","line":82,"column":61,"nodeType":"301","messageId":"314","endLine":82,"endColumn":62},{"ruleId":"312","severity":1,"message":"313","line":85,"column":55,"nodeType":"301","messageId":"314","endLine":85,"endColumn":56},{"ruleId":"274","severity":1,"message":"315","line":130,"column":8,"nodeType":"276","endLine":130,"endColumn":10,"suggestions":"316"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":10,"nodeType":"286","messageId":"287","endLine":1,"endColumn":19},{"ruleId":"299","severity":1,"message":"309","line":61,"column":53,"nodeType":"301","messageId":"302","endLine":61,"endColumn":55},{"ruleId":"299","severity":1,"message":"309","line":87,"column":53,"nodeType":"301","messageId":"302","endLine":87,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":119,"column":29,"nodeType":"319","messageId":"320","endLine":119,"endColumn":30,"suggestions":"321"},{"ruleId":"284","severity":1,"message":"322","line":56,"column":11,"nodeType":"286","messageId":"287","endLine":56,"endColumn":19},{"ruleId":"284","severity":1,"message":"323","line":57,"column":15,"nodeType":"286","messageId":"287","endLine":57,"endColumn":29},{"ruleId":"274","severity":1,"message":"324","line":148,"column":8,"nodeType":"276","endLine":148,"endColumn":30,"suggestions":"325"},{"ruleId":"274","severity":1,"message":"326","line":152,"column":8,"nodeType":"276","endLine":152,"endColumn":37,"suggestions":"327"},{"ruleId":"274","severity":1,"message":"328","line":152,"column":9,"nodeType":"329","endLine":152,"endColumn":36},{"ruleId":"299","severity":1,"message":"309","line":72,"column":53,"nodeType":"301","messageId":"302","endLine":72,"endColumn":55},{"ruleId":"317","severity":1,"message":"318","line":98,"column":29,"nodeType":"319","messageId":"320","endLine":98,"endColumn":30,"suggestions":"330"},{"ruleId":"299","severity":1,"message":"300","line":155,"column":45,"nodeType":"301","messageId":"302","endLine":155,"endColumn":47},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],["331"],["332"],["331"],["332"],["331"],["332"],["331"],["332"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.","ArrayExpression",["333"],["331"],["332"],"React Hook useEffect has a missing dependency: 'onDebouncedValueChange'. Either include it or remove the dependency array. If 'onDebouncedValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],"React Hook useEffect has a missing dependency: 'onRef'. Either include it or remove the dependency array. If 'onRef' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["335"],"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar","'setSkip' is assigned a value but never used.",["336"],"React Hook useEffect has missing dependencies: 'handleDataChange' and 'handleValueDataChange'. Either include them or remove the dependency array.",["337"],"React Hook useEffect has a missing dependency: 'handleValueDataChange'. Either include it or remove the dependency array.",["338"],"React Hook useEffect has missing dependencies: 'closeDropdown' and 'openDropdown'. Either include them or remove the dependency array.",["339"],"'isDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearValue', 'formatDate', 'isValiddddMMMDDYYYYHHmmssGMTZZDate', 'name', and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["340"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selection' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'columns'. Either include it or remove the dependency array. If 'setTableColumns' needs the current value of 'columns', you can also switch to useReducer instead of useState and read 'columns' in the reducer.",["341"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'useForm' is defined but never used.","'ButtonHTMLType' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'formHandlers', 'props.form', 'props.initialValues', and 'registerNonControlFields'. Either include them or remove the dependency array.",["342"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["343","344"],"'reRender' is assigned a value but never used.","'isValueChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formContext' and 'name'. Either include them or remove the dependency array.",["345"],"React Hook useEffect has missing dependencies: 'formContext' and 'name'. Either include them or remove the dependency array. If 'setInputValue' needs the current value of 'name', you can also switch to useReducer instead of useState and read 'name' in the reducer.",["346"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["347","348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"351","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"messageId":"368","fix":"369","desc":"370"},{"messageId":"371","fix":"372","desc":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"messageId":"368","fix":"378","desc":"370"},{"messageId":"371","fix":"379","desc":"373"},"Update the dependencies array to be: [delay, value]",{"range":"380","text":"381"},"Update the dependencies array to be: [debouncedValue, onDebouncedValueChange]",{"range":"382","text":"383"},"Update the dependencies array to be: [autoFocus, onRef]",{"range":"384","text":"385"},{"range":"386","text":"383"},"Update the dependencies array to be: [data, handleDataChange, handleValueDataChange]",{"range":"387","text":"388"},"Update the dependencies array to be: [handleValueDataChange, value]",{"range":"389","text":"390"},"Update the dependencies array to be: [closeDropdown, openDropdown, visibleDropdown]",{"range":"391","text":"392"},"Update the dependencies array to be: [clearValue, formatDate, isValiddddMMMDDYYYYHHmmssGMTZZDate, name, onChange, value]",{"range":"393","text":"394"},"Update the dependencies array to be: [columns]",{"range":"395","text":"396"},"Update the dependencies array to be: [formHandlers, props.form, props.initialValues, registerNonControlFields]",{"range":"397","text":"398"},"removeEscape",{"range":"399","text":"400"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"401","text":"402"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [formContext, formContext.register, name]",{"range":"403","text":"404"},"Update the dependencies array to be: [formContext, name]",{"range":"405","text":"406"},{"range":"407","text":"400"},{"range":"408","text":"402"},[911,918],"[delay, value]",[3690,3706],"[debouncedValue, onDebouncedValueChange]",[3880,3891],"[autoFocus, onRef]",[22543,22559],[22717,22723],"[data, handleDataChange, handleValueDataChange]",[22797,22804],"[handleValueDataChange, value]",[22960,22977],"[closeDropdown, openDropdown, visibleDropdown]",[6642,6649],"[clearValue, formatDate, isValiddddMMMDDYYYYHHmmssGMTZZDate, name, onChange, value]",[1612,1614],"[columns]",[4274,4276],"[formHandlers, props.form, props.initialValues, registerNonControlFields]",[3651,3652],"",[3651,3651],"\\",[4223,4245],"[formContext, formContext.register, name]",[4334,4363],"[formContext, name]",[2679,2680],[2679,2679]]