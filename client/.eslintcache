[{"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\skill\\skill.tsx":"1","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\skill\\skill.store.ts":"2","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx":"3","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\screens\\skill\\index.ts":"4","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\iframe\\modal.iframe.tsx":"5","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\index.ts":"6","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\shared\\models\\base.model.ts":"7","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\form.tsx":"8","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field.tsx":"9","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\query-params\\form-query-param.handler.ts":"10","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\reportWebVitals.ts":"11","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\warning\\modal.warning.tsx":"12","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\modal.default-props.tsx":"13","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\table-component.tsx":"14","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\helpers\\index.ts":"15","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\helpers\\form.helpers.validator.ts":"16","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\divider\\form-divider.tsx":"17","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\request-cache-id\\index.ts":"18","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\handlers\\cache\\provider\\form-field-cache-local-storage-provider.ts":"19","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx":"20","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\shared\\api\\base.api.ts":"21","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\notification\\index.ts":"22","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\body\\form-section-body.tsx":"23","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field-error.tsx":"24","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\modal.tsx":"25","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\info\\modal.info.tsx":"26","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\error\\modal.error.tsx":"27","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\index.ts":"28","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\index.ts":"29","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\form-section.tsx":"30","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field.handlers.ts":"31","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\handlers\\cache\\form-field-cache.handler.tsx":"32","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\screens\\top-menu.tsx":"33"},{"size":4160,"mtime":1613566251831,"results":"34","hashOfConfig":"35"},{"size":2151,"mtime":1613566112543,"results":"36","hashOfConfig":"35"},{"size":399,"mtime":1613567576689,"results":"37","hashOfConfig":"35"},{"size":33,"mtime":1613566448026,"results":"38","hashOfConfig":"35"},{"size":875,"mtime":1613559588548,"results":"39","hashOfConfig":"35"},{"size":27,"mtime":1613502935126,"results":"40","hashOfConfig":"35"},{"size":51,"mtime":1613557004505,"results":"41","hashOfConfig":"35"},{"size":5238,"mtime":1613560137146,"results":"42","hashOfConfig":"35"},{"size":6053,"mtime":1613549011918,"results":"43","hashOfConfig":"35"},{"size":4756,"mtime":1613560022044,"results":"44","hashOfConfig":"35"},{"size":440,"mtime":1612873232414,"results":"45","hashOfConfig":"35"},{"size":517,"mtime":1613556633476,"results":"46","hashOfConfig":"35"},{"size":373,"mtime":1613556296541,"results":"47","hashOfConfig":"35"},{"size":4566,"mtime":1613563779155,"results":"48","hashOfConfig":"35"},{"size":57,"mtime":1613540740655,"results":"49","hashOfConfig":"35"},{"size":499,"mtime":1613546907155,"results":"50","hashOfConfig":"35"},{"size":118,"mtime":1613543082657,"results":"51","hashOfConfig":"35"},{"size":78,"mtime":1613540740609,"results":"52","hashOfConfig":"35"},{"size":711,"mtime":1613543614876,"results":"53","hashOfConfig":"35"},{"size":517,"mtime":1612899897654,"results":"54","hashOfConfig":"35"},{"size":716,"mtime":1613557467775,"results":"55","hashOfConfig":"35"},{"size":33,"mtime":1613556689734,"results":"56","hashOfConfig":"35"},{"size":455,"mtime":1613544804645,"results":"57","hashOfConfig":"35"},{"size":1859,"mtime":1613543327658,"results":"58","hashOfConfig":"35"},{"size":2208,"mtime":1613559919913,"results":"59","hashOfConfig":"35"},{"size":231,"mtime":1613556081528,"results":"60","hashOfConfig":"35"},{"size":295,"mtime":1613556034076,"results":"61","hashOfConfig":"35"},{"size":162,"mtime":1613544327004,"results":"62","hashOfConfig":"35"},{"size":398,"mtime":1613540740713,"results":"63","hashOfConfig":"35"},{"size":2600,"mtime":1613560137148,"results":"64","hashOfConfig":"35"},{"size":832,"mtime":1613543941802,"results":"65","hashOfConfig":"35"},{"size":1411,"mtime":1613543726452,"results":"66","hashOfConfig":"35"},{"size":1720,"mtime":1613568739060,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1gjj7ub",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\skill\\skill.tsx",[],["140","141"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\skill\\skill.store.ts",["142"],"import { makeObservable, observable, computed, action } from 'mobx';\r\nimport {\r\n    TablePaginationConfig,\r\n    Key,\r\n    SorterResult,\r\n    TableCurrentDataSource,\r\n} from '@library/table';\r\nimport { SkillModel } from './skill.model';\r\nimport { SkillService } from './skill.service';\r\n\r\nclass SkillStore {\r\n    loading = false;\r\n    skills: SkillModel[] = [];\r\n    criteria = {\r\n        page: 1,\r\n        pageSize: 25,\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        makeObservable(this, {\r\n            loading: observable,\r\n            skills: observable,\r\n            criteria: observable,\r\n            getAll: action,\r\n            change: action,\r\n        });\r\n    }\r\n\r\n    getAll = async (searchCriteria?: any) => {\r\n        try {\r\n            this.loading = true;\r\n            const skillService = new SkillService();\r\n            this.skills = await skillService.getAll();\r\n        } finally {\r\n            this.loading = false;\r\n        }\r\n    };\r\n\r\n    create = async (skill: SkillModel) => {\r\n        try {\r\n            this.loading = true;\r\n            const skillService = new SkillService();\r\n            return await skillService.create(skill);\r\n        } finally {\r\n            this.loading = false;\r\n        }\r\n    };\r\n\r\n    update = async (id: string, skill: SkillModel) => {\r\n        try {\r\n            this.loading = true;\r\n            const skillService = new SkillService();\r\n            return await skillService.update(id, skill);\r\n        } finally {\r\n            this.loading = false;\r\n        }\r\n    };\r\n\r\n    change = async (\r\n        pagination: TablePaginationConfig,\r\n        filters: Record<string, (Key | boolean)[] | null>,\r\n        sorter: SorterResult<any> | SorterResult<any>[],\r\n        extra: TableCurrentDataSource<any>,\r\n    ) => {\r\n        this.criteria = {\r\n            ...this.criteria,\r\n            page: pagination.current as number,\r\n            pageSize: pagination.pageSize as number,\r\n            // sortField: (sorter as any).field,\r\n            // sortOrder: (sorter as any).order,\r\n        };\r\n    };\r\n}\r\nconst skillStore = new SkillStore();\r\n\r\nexport { skillStore as SkillStore };\r\n",["143","144"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\App.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\screens\\skill\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\iframe\\modal.iframe.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\button\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\shared\\models\\base.model.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\form.tsx",["145"],"import React, { useEffect, cloneElement } from 'react';\r\nimport { useForm, FormProvider } from 'react-hook-form/dist/index.ie11';\r\nimport { yupResolver } from '@hookform/resolvers/dist/ie11/yup';\r\nimport { FormHandlers } from './form.handlers';\r\nimport './form.scss';\r\n\r\nexport const Form = ({\r\n    style,\r\n    noMargin,\r\n    children,\r\n    validationSchema,\r\n    ...props\r\n}: any) => {\r\n    const formHandlers = new FormHandlers(props);\r\n    props.initialValues = formHandlers.onInitializing(props.initialValues);\r\n    const form = useForm({\r\n        defaultValues: {\r\n            ...props.initialValues,\r\n        },\r\n        resolver: yupResolver(validationSchema),\r\n        mode: 'onChange',\r\n        reValidateMode: 'onChange',\r\n    });\r\n\r\n    const onSubmit = (data: any[], e: any) => {\r\n        props.onSubmit(data, props.form);\r\n    };\r\n\r\n    const onError = (errors: any, e: any) => console.error(errors, e);\r\n\r\n    const registerOnSubmit = () => {\r\n        const existingOnSubmit = props.onSubmit;\r\n        props.onSubmit = (values: any, form: any) => {\r\n            values = formHandlers.onSubmitting(values, form);\r\n            if (existingOnSubmit) {\r\n                existingOnSubmit(values, form);\r\n            }\r\n        };\r\n    };\r\n\r\n    const registerOnReset = () => {\r\n        const existingOnReset = props.onReset;\r\n        props.onReset = (values: any, _form: any) => {\r\n            form.reset(values);\r\n            values = formHandlers.onResetting(values, _form);\r\n            if (existingOnReset) {\r\n                existingOnReset(values, _form);\r\n            }\r\n        };\r\n    };\r\n\r\n    /** register fields from default values if it's not already present */\r\n    const registerNonControlFields = () => {\r\n        const initialValues = props.initialValues || {};\r\n        const fields = form.control.fieldsRef.current;\r\n        for (const key in initialValues) {\r\n            if (!fields[key]) {\r\n                form.register({ name: key });\r\n            }\r\n        }\r\n    };\r\n\r\n    /* formik method support */\r\n    props.form = {\r\n        control: form.control,\r\n        resetFormArray: (values: any) => {\r\n            props.onReset(values);\r\n        },\r\n        values: form.getValues(),\r\n        setValue: (name: string, value: any, config: any) => {\r\n            /** register field if it's not already present */\r\n            const fields = form.control.fieldsRef.current;\r\n            if (!fields[name]) {\r\n                form.register({ name: name });\r\n            }\r\n            /** end */\r\n\r\n            if (Array.isArray(value)) {\r\n                for (const subKey in value) {\r\n                    for (const subNestKey in value[parseInt(subKey)]) {\r\n                        const key = `${name}[${subKey}].${subNestKey}`;\r\n                        form.register({\r\n                            name: key,\r\n                        });\r\n                        form.setValue(\r\n                            key,\r\n                            value[parseInt(subKey)][subNestKey],\r\n                            {\r\n                                shouldValidate: true,\r\n                            },\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            config = config || {};\r\n            form.setValue(name, value, {\r\n                shouldValidate: config.shouldValidate || true,\r\n            });\r\n        },\r\n        setValues: (values: any, config: any) => {\r\n            for (const key in values) {\r\n                props.form.setValue(key, values[key], config);\r\n            }\r\n        },\r\n        submitForm: () => {\r\n            form.handleSubmit(onSubmit, onError)();\r\n        },\r\n        resetForm: () => {\r\n            props.onReset(props.initialValues);\r\n        },\r\n        // setFieldValue: form.setValue,\r\n        setSubmitting: (value: any) => {\r\n            form.control.updateFormState({\r\n                isSubmitting: value,\r\n            });\r\n        },\r\n        ...form.formState,\r\n    };\r\n    /* end */\r\n\r\n    registerOnSubmit();\r\n    registerOnReset();\r\n\r\n    useEffect(() => {\r\n        const onReady = async () => {\r\n            await formHandlers.onReady(props.initialValues, props.form);\r\n        };\r\n        onReady();\r\n        registerNonControlFields();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"form\" style={style}>\r\n            <FormProvider {...form}>\r\n                <form\r\n                    {...props}\r\n                    onSubmit={form.handleSubmit(onSubmit, onError)}\r\n                >\r\n                    {renderChildren(props, children)}\r\n                </form>\r\n            </FormProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst renderChildren = (props: any, children: any) => {\r\n    return children\r\n        ? typeof children === 'function'\r\n            ? children(props)\r\n            : Array.isArray(children)\r\n            ? children.map((child, index) => {\r\n                  return renderChild(props, child, index.toString());\r\n              })\r\n            : renderChild(props, children)\r\n        : null;\r\n};\r\n\r\nconst renderChild = (props: any, child: any, key?: string) => {\r\n    let cloneChild = cloneElement(child, ...props);\r\n    return <React.Fragment key={key}>{cloneChild}</React.Fragment>;\r\n};\r\n",["146","147"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field.tsx",["148","149","150","151","152"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\query-params\\form-query-param.handler.ts",["153"],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\reportWebVitals.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\warning\\modal.warning.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\modal.default-props.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\table\\table-component.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\helpers\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\helpers\\form.helpers.validator.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\divider\\form-divider.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\handlers\\request-cache-id\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\handlers\\cache\\provider\\form-field-cache-local-storage-provider.ts",["154"],"import { IFormFieldCacheConfig } from '../form-field-cache.handler';\r\n\r\nexport class FormFieldCacheLocalStorageProvider {\r\n    constructor(config?: IFormFieldCacheConfig) {}\r\n\r\n    get = (key: string) => {\r\n        const values = localStorage.getItem(key);\r\n        return values ? JSON.parse(values) : [];\r\n    };\r\n\r\n    set = (key: string, value: any, max: number) => {\r\n        let values = this.get(key) || [];\r\n        while (values.length >= max) {\r\n            values.pop();\r\n        }\r\n        if (values.indexOf(value) > -1) {\r\n            values.splice(values.indexOf(value), 1);\r\n        }\r\n        values = [value, ...values];\r\n        localStorage.setItem(key, JSON.stringify(values));\r\n    };\r\n}\r\n","E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\index.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\components\\shared\\api\\base.api.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\notification\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\body\\form-section-body.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field-error.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\modal.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\info\\modal.info.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\modal\\error\\modal.error.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\index.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\section\\form-section.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\form-field.handlers.ts",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\library\\form\\field\\handlers\\cache\\form-field-cache.handler.tsx",[],"E:\\Personal\\Projects\\_own\\_github\\skill-matrix\\client\\src\\screens\\top-menu.tsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":46},{"ruleId":"155","replacedBy":"163"},{"ruleId":"157","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":131,"column":8,"nodeType":"167","endLine":131,"endColumn":10,"suggestions":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"157","replacedBy":"170"},{"ruleId":"159","severity":1,"message":"171","line":56,"column":11,"nodeType":"161","messageId":"162","endLine":56,"endColumn":19},{"ruleId":"159","severity":1,"message":"172","line":57,"column":15,"nodeType":"161","messageId":"162","endLine":57,"endColumn":29},{"ruleId":"165","severity":1,"message":"173","line":148,"column":8,"nodeType":"167","endLine":148,"endColumn":30,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"175","line":152,"column":8,"nodeType":"167","endLine":152,"endColumn":37,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"177","line":152,"column":9,"nodeType":"178","endLine":152,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":98,"column":29,"nodeType":"181","messageId":"182","endLine":98,"endColumn":30,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":4,"column":5,"nodeType":"186","messageId":"187","endLine":4,"endColumn":51},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"@typescript-eslint/no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar",["188"],["189"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formHandlers', 'props.form', 'props.initialValues', and 'registerNonControlFields'. Either include them or remove the dependency array.","ArrayExpression",["190"],["188"],["189"],"'reRender' is assigned a value but never used.","'isValueChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formContext' and 'name'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'formContext' and 'name'. Either include them or remove the dependency array. If 'setInputValue' needs the current value of 'name', you can also switch to useReducer instead of useState and read 'name' in the reducer.",["192"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["193","194"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"204","fix":"205","desc":"206"},"Update the dependencies array to be: [formHandlers, props.form, props.initialValues, registerNonControlFields]",{"range":"207","text":"208"},"Update the dependencies array to be: [formContext, formContext.register, name]",{"range":"209","text":"210"},"Update the dependencies array to be: [formContext, name]",{"range":"211","text":"212"},"removeEscape",{"range":"213","text":"214"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"215","text":"216"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[4265,4267],"[formHandlers, props.form, props.initialValues, registerNonControlFields]",[4223,4245],"[formContext, formContext.register, name]",[4334,4363],"[formContext, name]",[2680,2681],"",[2680,2680],"\\"]